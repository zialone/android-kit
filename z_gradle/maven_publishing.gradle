apply plugin: 'maven-publish'

def maven_groupId = _findProperty(project, "MAVEN_GROUPID") ?: "com.hcanyz.android_kit"
def maven_artifactId = _findProperty(project, "MAVEN_ARTIFACTID") ?: project.name
def maven_version = _findProperty(project, "MAVEN_VERSION") ?: project.android.defaultConfig.versionName

static def _findProperty(project, propertyName) {
    try {
        return project.ext[propertyName]
    } catch (ignored) {
    }
    return null
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

publishing {
    afterEvaluate {
        publications {
            if (android.libraryVariants.isEmpty()) {
                Production(MavenPublication) {
                    groupId = maven_groupId
                    artifactId = maven_artifactId
                    version = maven_version
                    artifact(tasks.getByName("bundleReleaseAar"))
                    artifact generateSourcesJar
                }
            } else {
                android.libraryVariants.all { variant ->
                    "maven${variant.name.capitalize()}Aar"(MavenPublication) {
                        artifact(tasks.getByName("bundle${variant.name.capitalize()}Aar"))
                        groupId = maven_groupId
                        artifactId = maven_artifactId + "-" + variant.name
                        version = maven_version
                    }
                }
            }
        }
    }
    repositories {
        maven {
            // name = Maven
            url = maven_version.endsWith('SNAPSHOT') ? deps.maven.SNAPSHOT_REPOSITORY_URL : deps.maven.RELEASE_REPOSITORY_URL
        }
    }
}

